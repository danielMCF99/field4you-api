{
  "openapi": "3.0.0",
  "info": {
    "title": "User Management API Documentation",
    "version": "1.1.0",
    "description": "Updated User Management API Information"
  },
  "paths": {
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Successfully fetched all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched user.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "summary": "Update user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated successfully." },
          "400": { "description": "Invalid data." },
          "404": { "description": "User not found." }
        }
      },
      "delete": {
        "summary": "Delete user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully." },
          "404": { "description": "User not found." }
        }
      }
    },
    "/api/users/status": {
      "patch": {
        "summary": "Update user status",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "example": "active" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User status updated." },
          "400": { "description": "Invalid status." }
        }
      }
    },
    "/api/users/{id}/image": {
      "patch": {
        "summary": "Update user profile image",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Image updated successfully." },
          "400": { "description": "Invalid image upload." }
        }
      }
    },
    "/api/users/owner-requests/create": {
      "post": {
        "summary": "Create an owner request",
        "tags": ["Owner Requests"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestDetails": {
                    "type": "string",
                    "example": "I would like to become an owner."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Owner request created." }
        }
      }
    },
    "/api/users/owner-requests/all": {
      "get": {
        "summary": "Get all owner requests",
        "tags": ["Owner Requests"],
        "responses": {
          "200": { "description": "List of owner requests." }
        }
      }
    },
    "/api/users/owner-requests/{id}": {
      "get": {
        "summary": "Get owner request by ID",
        "tags": ["Owner Requests"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Owner request details." },
          "404": { "description": "Owner request not found." }
        }
      },
      "patch": {
        "summary": "Update owner request",
        "tags": ["Owner Requests"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "example": "approved" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Owner request updated." },
          "400": { "description": "Invalid update." }
        }
      }
    },
    "/api/users/{userId}/owner-requests": {
      "get": {
        "summary": "Get owner requests by user ID",
        "tags": ["Owner Requests"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "List of owner's requests." },
          "404": { "description": "User not found." }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "authServiceUserId": { "type": "string" },
          "userType": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "phoneNumber": { "type": "string" },
          "district": { "type": "string" },
          "city": { "type": "string" },
          "address": { "type": "string" },
          "latitude": { "type": "number" },
          "longitude": { "type": "number" },
          "birthDate": { "type": "string", "format": "date" },
          "registerDate": { "type": "string", "format": "date-time" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
