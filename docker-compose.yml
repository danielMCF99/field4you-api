services:
  mongodb:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongodb
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo_data:/data/db
    command:
      [
        'mongod',
        '--replSet',
        'rs0',
        '--auth',
        '--keyFile',
        '/etc/mongo-keyfile',
      ]

  mongo-init-replica:
    image: mongo:latest
    depends_on:
      - mongodb
    entrypoint:
      - bash
      - -c
      - |
        echo "A aguardar que o MongoDB esteja pronto..."
        for i in {1..30}; do
          mongosh --host mongodb --username admin --password password --authenticationDatabase admin --eval "db.adminCommand('ping')" && break
          echo "Tentativa $i: Mongo ainda não está pronto"
          sleep 2
        done
        echo "Iniciando replica set..."
        mongosh --host mongodb --username admin --password password --authenticationDatabase admin --eval "rs.initiate()"
    restart: 'no'

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    depends_on:
      - mongo-init-replica

  gateway-microservice:
    build:
      context: ./gateway-microservice
    ports:
      - 3000:3000
    environment:
      - AUTH_SERVICE_URL=http://auth-microservice:3001/auth
      - USER_SERVICE_URL=http://user-microservice:3002/users
      - BOOKING_SERVICE_URL=http://booking-microservice:3003/bookings
      - SPORTS_VENUE_SERVICE_URL=http://sports-venue-microservice:3004/sports-venues
      - FEED_SERVICE_URL=http://feed-microservice:3005/posts
    depends_on:
      - rabbitmq
      - auth-microservice
      - user-microservice
      - booking-microservice
      - sports-venue-microservice
      - feed-microservice

  auth-microservice:
    build:
      context: ./auth-microservice
    ports:
      - 3001:3001
    env_file:
      - ./auth-microservice/.env
  user-microservice:
    build:
      context: ./user-microservice
    ports:
      - 3002:3002
    env_file:
      - ./user-microservice/.env

  booking-microservice:
    build:
      context: ./booking-microservice
    ports:
      - 3003:3003
    env_file:
      - ./booking-microservice/.env

  sports-venue-microservice:
    build:
      context: ./sports-venue-microservice
    ports:
      - 3004:3004
    env_file:
      - ./sports-venue-microservice/.env

  feed-microservice:
    build:
      context: ./feed-microservice
    ports:
      - 3005:3005
    env_file:
      - ./feed-microservice/.env

volumes:
  mongo_data:
  # mongo_data_2:
  # mongo_data_3:
